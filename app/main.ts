/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
// import * as kubernetes from "./.gen/providers/kubernetes";
import * as kubernetes from "@cdktf/provider-kubernetes";
import * as path from "path";
import { Construct } from "constructs";
import { App, TerraformStack } from "cdktf";
import { SimpleKubernetesWebApp } from "./constructs";

class MyStack extends TerraformStack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    // define resources here

    new kubernetes.provider.KubernetesProvider(this, "kind", {
      configPath: path.join(__dirname, "../kubeconfig.yaml"),
    });

    const app_backend = new SimpleKubernetesWebApp(this, "app_backend", {
      image: "localhost:5000/nocorp-backend:latest",
      replicas: 1,
      port: 30002,
      app: "myapp",
      component: "backend",
      environment: "dev",
    });

    new SimpleKubernetesWebApp(this, "app_frontend", {
      image: "localhost:5000/nocorp-frontend:latest",
      replicas: 2,
      port: 30001,
      app: "myapp",
      component: "frontend",
      environment: "dev",
      env: { BACKEND_APP_URL: `http://localhost:${app_backend.config.port}` },
    });
  }
}

const app = new App();
new MyStack(app, "app");
app.synth();
